filter {
  if [source] =~ /\/var\/log\/event-server\/http\.log/ {
    grok {
      match => { "message" => "\[%{TIMESTAMP_ISO8601:timestamp}\]\ \[(?<level>(ALL|TRACE|DEBUG|INFO|WARN|ERROR|FATAL|MARK|OFF))\]\ (?<logger>[a-zA-Z]+)\ \-\ \:\:ffff\:(?<client_ip>[0-9\.]+)\ ?-?\ ?-?\ ?\"(?<method>[A-Z]+)\ (?<GREEDYDATA:message_remainder>.*\n?.*)" }
    }
    date {
      match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss" ]
      target => "@timestamp"
      timezone => "Europe/Prague"
      remove_field => [ "timestamp" ]
    }
  }
  if [source] =~ /\/var\/log\/event-server\/sql\.log/ or [source] =~ /\/var\/log\/event-server\/raw\.log/ or [source] =~ /\/var\/log\/event-server\/socketio\.log/ or [source] =~ /\/var\/log\/event-server\/clientEvents\.log/ {
    grok {
      match => { "message" => "\[%{TIMESTAMP_ISO8601:timestamp}\]\ \[(?<level>(ALL|TRACE|DEBUG|INFO|WARN|ERROR|FATAL|MARK|OFF))\]\ (?<logger>[a-zA-Z]+)\ \-\ (?<GREEDYDATA:message_remainder>.*\n?.*)" }
    }
    date {
      match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss" ]
      target => "@timestamp"
      timezone => "Europe/Prague"
      remove_field => [ "timestamp" ]
    }
    mutate  {
      replace => { "message" => "%{message_remainder}" }
      remove_field => [ "message_remainder" ]
    }
  }
}